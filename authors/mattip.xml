<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyPy (Posts by mattip)</title><link>https://www.pypy.org/</link><description></description><atom:link href="https://www.pypy.org/authors/mattip.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:pypy-dev@pypy.org"&gt;The PyPy Team&lt;/a&gt; </copyright><lastBuildDate>Fri, 30 Aug 2024 08:28:16 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PyPy v7.3.17 release</title><link>https://www.pypy.org/posts/2024/08/pypy-v7317-release.html</link><dc:creator>mattip</dc:creator><description>&lt;section id="pypy-v7-3-17-release-of-python-2-7-and-3-10"&gt;
&lt;h2&gt;PyPy v7.3.17: release of python 2.7 and 3.10&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.17 of PyPy.&lt;/p&gt;
&lt;p&gt;This release includes a new &lt;a class="reference internal" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#risc-v-jit-backend"&gt;RISC-V JIT backend&lt;/a&gt;, an &lt;a class="reference internal" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#improved-repl"&gt;improved REPL&lt;/a&gt; based on
work by the CPython team, and &lt;a class="reference internal" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#better-jit-optimizations"&gt;better JIT optimizations&lt;/a&gt; of integer
operations. Special shout-outs to &lt;a class="reference external" href="https://github.com/loganchien"&gt;Logan Chien&lt;/a&gt; for the &lt;a class="reference external" href="https://github.com/pypy/pypy/pull/5002"&gt;RISC-V backend
work&lt;/a&gt;, to &lt;a class="reference external" href="https://github.com/nirit100"&gt;Nico Rittinghaus&lt;/a&gt; for better integer optimization in the JIT, and
the CPython team that has worked on the repl.&lt;/p&gt;
&lt;p&gt;The release includes two different interpreters:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.10, which is an interpreter supporting the syntax and the features of
Python 3.10, including the stdlib for CPython 3.10.14.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the dual
release. This is a micro release, all APIs are compatible with the other 7.3
releases. It follows after 7.3.16 release on April 23, 2024.&lt;/p&gt;
&lt;p&gt;We recommend updating. You can find links to download the releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
&lt;a class="reference external" href="https://www.pypy.org/pypy-sponsors.html"&gt;direct consulting&lt;/a&gt; work. If PyPy is helping you out, we would love to hear
about it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: bug fixes,
&lt;a class="reference external" href="https://www.pypy.org/posts/2024/08/index.html"&gt;PyPy&lt;/a&gt; and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2024/08/project-ideas.html"&gt;help&lt;/a&gt; with
making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt; / &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant
on PyPy. In any case, both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="risc-v-backend-for-the-jit"&gt;
&lt;span id="risc-v-jit-backend"&gt;&lt;/span&gt;&lt;h3&gt;RISC-V backend for the JIT&lt;/h3&gt;
&lt;p&gt;PyPy's JIT has added support for generating 64-bit RISC-V machine code at
runtime (RV64-IMAD, specifically). So far we are not releasing binaries for any
RISC-V platforms, but there are &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/riscv.html"&gt;instructions&lt;/a&gt; on how to cross-compile binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="repl-improvements"&gt;
&lt;span id="improved-repl"&gt;&lt;/span&gt;&lt;h3&gt;REPL Improvements&lt;/h3&gt;
&lt;p&gt;The biggest user-visible change of the release is new features in the repl of
PyPy3.10. CPython 3.13 has adopted and extended PyPy's pure-Python repl, adding
a number of features and fixing a number or bugs in the process. We have
backported and added the following features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Prompts and tracebacks use terminal colors, as well as &lt;a class="reference external" href="https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda"&gt;terminal hyperlinks&lt;/a&gt;
for file names.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Bracketed-paste"&gt;Bracketed paste&lt;/a&gt; enable pasting several lines of input into the terminal
without auto-indentation getting in the way.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A special interactive help browser (F1), history browser (F2), explicit paste
mode (F3).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for Ctrl-&amp;lt;left/right&amp;gt; to jump over whole words at a time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a class="reference external" href="https://docs.python.org/3.13/whatsnew/3.13.html#a-better-interactive-interpreter"&gt;CPython documentation for further details&lt;/a&gt;. Thanks to Łukasz Langa,
Pablo Galindo Salgado and the other CPython devs involved in this work.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="better-jit-optimizations-of-integer-operations"&gt;
&lt;span id="better-jit-optimizations"&gt;&lt;/span&gt;&lt;h3&gt;Better JIT optimizations of integer operations&lt;/h3&gt;
&lt;p&gt;The optimizers of PyPy's JIT have become much better at reasoning about and
optimizing integer operations. This is done with a new &lt;a class="reference external" href="https://pypy.org/posts/2024/08/toy-knownbits.html"&gt;"knownbits" abstract
domain&lt;/a&gt;. In many programs that do bit-manipulation of integers, some of the
bits of the integer variables of the program can be statically known. Here's a
simple example:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_9c37c6f0434947b48b5de5194f24c0e7-1" name="rest_code_9c37c6f0434947b48b5de5194f24c0e7-1" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#rest_code_9c37c6f0434947b48b5de5194f24c0e7-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_9c37c6f0434947b48b5de5194f24c0e7-2" name="rest_code_9c37c6f0434947b48b5de5194f24c0e7-2" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#rest_code_9c37c6f0434947b48b5de5194f24c0e7-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;a id="rest_code_9c37c6f0434947b48b5de5194f24c0e7-3" name="rest_code_9c37c6f0434947b48b5de5194f24c0e7-3" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#rest_code_9c37c6f0434947b48b5de5194f24c0e7-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_9c37c6f0434947b48b5de5194f24c0e7-4" name="rest_code_9c37c6f0434947b48b5de5194f24c0e7-4" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#rest_code_9c37c6f0434947b48b5de5194f24c0e7-4"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;a id="rest_code_9c37c6f0434947b48b5de5194f24c0e7-5" name="rest_code_9c37c6f0434947b48b5de5194f24c0e7-5" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#rest_code_9c37c6f0434947b48b5de5194f24c0e7-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_9c37c6f0434947b48b5de5194f24c0e7-6" name="rest_code_9c37c6f0434947b48b5de5194f24c0e7-6" href="https://www.pypy.org/posts/2024/08/pypy-v7317-release.html#rest_code_9c37c6f0434947b48b5de5194f24c0e7-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the new abstract domain, the JIT can optimize the &lt;code class="docutils literal"&gt;if&lt;/code&gt;-condition to
&lt;code class="docutils literal"&gt;True&lt;/code&gt;, because it already knows that the lowest bit of &lt;code class="docutils literal"&gt;x&lt;/code&gt; must be set.
This optimization applies to all Python-integers that fit into a machine word
(PyPy optimistically picks between two different representations for &lt;code class="docutils literal"&gt;int&lt;/code&gt;,
depending on the size of the value). Unfortunately there is very little impact
of this change on almost all Python code, because intensive bit-manipulation is
rare in Python. However, the change leads to significant performance
improvements in &lt;a class="reference external" href="https://docs.pydrofoil.org/en/latest/"&gt;Pydrofoil&lt;/a&gt; (the RPython-based RISC-V/ARM emulators that are
automatically generated from high-level &lt;a class="reference external" href="https://github.com/rems-project/sail/"&gt;Sail&lt;/a&gt; specifications of the respective
ISAs, and that use the RPython JIT to improve performance).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="pypy-versions-and-speed-pypy-org"&gt;
&lt;h3&gt;PyPy versions and speed.pypy.org&lt;/h3&gt;
&lt;p&gt;The keen-eyed will have noticed no mention of Python version 3.9 in the
releases above. Typically we will maintain only one version of Python3, but due
to PyPy3.9 support on conda-forge we maintained multiple versions from the
first release of PyPy3.10 in PyPy v7.3.12 (Dec 2022). Conda-forge is
&lt;a class="reference external" href="https://pypy.org/posts/2024/08/conda-forge-proposes-dropping-support-for-pypy.html"&gt;sunsetting its PyPy support&lt;/a&gt;, which means we can drop PyPy3.9. Since that was
the major driver of benchmarks at &lt;a class="reference external" href="https://speed.pypy.org"&gt;https://speed.pypy.org&lt;/a&gt;, we revamped the site
to showcase PyPy3.9, PyPy3.10, and various versions of cpython on the home
page. For historical reasons, the "baseline" for comparison is still cpython
3.7.19.&lt;/p&gt;
&lt;p&gt;We will keep the buildbots building PyPY3.9 until the end of August, these
builds will still be available on the &lt;a class="reference external" href="https://buildbot.pypy.org/nightly/"&gt;nightly builds&lt;/a&gt; tab of the buildbot.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython
It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;We provide binary builds for:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS 64 bits, Windows 64 bits)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux (&lt;code class="docutils literal"&gt;aarch64&lt;/code&gt;) and macos (&lt;code class="docutils literal"&gt;macos_arm64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyPy supports Windows 32-bit, Linux PPC64 big- and little-endian, Linux ARM
32 bit, RISC-V RV64IMAFD Linux, and s390x Linux but does not release binaries.
Please reach out to us if you wish to sponsor binary releases for those
platforms. Downstream packagers provide binary builds for debian, Fedora,
conda, OpenBSD, FreeBSD, Gentoo, and more.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.17 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.17.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make pypy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy Team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2024/08/pypy-v7317-release.html</guid><pubDate>Wed, 28 Aug 2024 12:22:08 GMT</pubDate></item><item><title>Conda-forge proposes sunsetting support for PyPy</title><link>https://www.pypy.org/posts/2024/08/conda-forge-proposes-dropping-support-for-pypy.html</link><dc:creator>mattip</dc:creator><description>&lt;p&gt;Conda-forge has kindly been providing support for PyPy since 2019. The
conda-forge team has been very patient and generous with resources, but it
seems the uptake of PyPy has not justified the effort. Major packages still
are not &lt;a href="https://conda-forge.org/status/migration/?name=pypy38"&gt;available on PyPy&lt;/a&gt;,
others find it hard to &lt;a href="https://github.com/conda-forge/numpy-feedstock/pull/310"&gt;update
versions&lt;/a&gt;. We don't
get much feedback at all about people using PyPy, and even less about PyPy on
conda-forge. The conda-forge team has proposed &lt;a href="https://github.com/conda-forge/conda-forge.github.io/pull/2259"&gt;sunsetting
PyPy&lt;/a&gt; going
forward, which means current packages would remain but no new packages would be
built. If you have an opinion, you can comment on that PR, or on this blog post.&lt;/p&gt;
&lt;p&gt;Since conda-forge supports PyPy3.9 but not PyPy3.10, we have continued
releasing PyPy3.9 even though we typically support only one version of PyPy3.
With the sunsetting proposal, we will not release any more updates to PyPy3.9.
I opened a &lt;a href="https://github.com/orgs/pypy/discussions/4998"&gt;poll&lt;/a&gt; about the
intention to drop PyPy3.9. If you have an opinion, please chime in.&lt;/p&gt;</description><category>conda-forge</category><guid>https://www.pypy.org/posts/2024/08/conda-forge-proposes-dropping-support-for-pypy.html</guid><pubDate>Fri, 09 Aug 2024 06:27:41 GMT</pubDate></item><item><title>PyPy v7.3.16 release</title><link>https://www.pypy.org/posts/2024/04/pypy-v7316-release.html</link><dc:creator>mattip</dc:creator><description>&lt;section id="pypy-v7-3-16-release-of-python-2-7-3-9-and-3-10"&gt;
&lt;h2&gt;PyPy v7.3.16: release of python 2.7, 3.9, and 3.10&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.16 of PyPy.&lt;/p&gt;
&lt;p&gt;This release includes security fixes from upstream CPython, and bugfixes to the
garbage collector, described in a &lt;a class="reference external" href="https://www.pypy.org/posts/2024/03/fixing-bug-incremental-gc.html"&gt;gc bug-hunt blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The release includes three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.9, which is an interpreter supporting the syntax and the features of
Python 3.9, including the stdlib for CPython 3.9.19.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.10, which is an interpreter supporting the syntax and the features of
Python 3.10, including the stdlib for CPython 3.10.14.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. It follows after 7.3.15 release on Jan 15, 2024&lt;/p&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.16 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
&lt;a class="reference external" href="https://www.pypy.org/pypy-sponsors.html"&gt;direct consulting&lt;/a&gt; work. If PyPy is helping you out, we would love to hear
about it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: bug fixes,
&lt;a class="reference external" href="https://www.pypy.org/posts/2024/04/index.html"&gt;PyPy&lt;/a&gt; and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2024/04/project-ideas.html"&gt;help&lt;/a&gt; with
making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt; / &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant
on PyPy. In any case, both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython
It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;We provide binary builds for:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS 64 bits, Windows 64 bits)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux (&lt;code class="docutils literal"&gt;aarch64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apple &lt;strong&gt;M1 arm64&lt;/strong&gt; machines (&lt;code class="docutils literal"&gt;macos_arm64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy support Windows 32-bit, Linux PPC64 big- and little-endian, and Linux ARM
32 bit, but does not release binaries. Please reach out to us if you wish to
sponsor binary releases for those platforms. Downstream packagers provide
binary builds for debian, Fedora, conda, OpenBSD, FreeBSD, Gentoo, and more.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.16 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.16.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make pypy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy Team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2024/04/pypy-v7316-release.html</guid><pubDate>Tue, 23 Apr 2024 12:22:08 GMT</pubDate></item><item><title>PyPy v7.3.15 release</title><link>https://www.pypy.org/posts/2024/01/pypy-v7315-release.html</link><dc:creator>mattip</dc:creator><description>&lt;section id="pypy-v7-3-15-release-of-python-2-7-3-9-and-3-10"&gt;
&lt;h2&gt;PyPy v7.3.15: release of python 2.7, 3.9, and 3.10&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.15 of PyPy.&lt;/p&gt;
&lt;p&gt;This is primarily a bug-fix release, and includes work done to migrate PyPy to
Git and Github.&lt;/p&gt;
&lt;p&gt;The release includes three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.9, which is an interpreter supporting the syntax and the features of
Python 3.9, including the stdlib for CPython 3.9.18.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.10, which is an interpreter supporting the syntax and the features of
Python 3.10, including the stdlib for CPython 3.10.13.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. It follows after 7.3.14 release on Dec 25, 2023&lt;/p&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.15 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
&lt;a class="reference external" href="https://www.pypy.org/pypy-sponsors.html"&gt;direct consulting&lt;/a&gt; work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: bug fixes,
&lt;a class="reference external" href="https://www.pypy.org/posts/2024/01/index.html"&gt;PyPy&lt;/a&gt; and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2024/01/project-ideas.html"&gt;help&lt;/a&gt; with
making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt; / &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant
on PyPy. In any case, both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython
It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;We provide binary builds for:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS 64 bits, Windows 64 bits)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux (&lt;code class="docutils literal"&gt;aarch64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apple &lt;strong&gt;M1 arm64&lt;/strong&gt; machines (&lt;code class="docutils literal"&gt;macos_arm64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy support Windows 32-bit, Linux PPC64 big- and little-endian, and Linux ARM
32 bit, but does not release binaries. Please reach out to us if you wish to
sponsor binary releases for those platforms. Downstream packagers provide
binary builds for debian, Fedora, conda, OpenBSD, FreeBSD, Gentoo, and more.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.15 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.15.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make pypy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy Team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2024/01/pypy-v7315-release.html</guid><pubDate>Mon, 15 Jan 2024 12:22:08 GMT</pubDate></item><item><title>PyPy has moved to Git, GitHub</title><link>https://www.pypy.org/posts/2023/12/pypy-moved-to-git-github.html</link><dc:creator>mattip</dc:creator><description>&lt;p&gt;PyPy has moved its canonical repo and issue tracker from
&lt;a href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt; to &lt;a href="https://github.com/pypy/pypy"&gt;https://github.com/pypy/pypy&lt;/a&gt;. Obviously,
this means development will now be tracked in Git rather than Mercurial.&lt;/p&gt;
&lt;h3 id="motivation"&gt;Motivation&lt;/h3&gt;
&lt;p&gt;We still feel Mercurial is a better version control system. The named branch
model and user interface are superior. But&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;foss.heptapod.net is not well indexed in google/bing/duckduckgo
  search, so people find it harder to search for issues in the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since Heptapod has tightened its spam control, we get reports that
  users create issues only to have them flagged as spam.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Source has become synonymous with GitHub, and we are too small to
  change that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Much of the current development comes as a reaction to fixing issues.
  Tracking interlocking issues is easier if all the code is on the same
  platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://doc.pypy.org/en/latest/faq.html#why-doesn-t-pypy-use-git-and-move-to-github"&gt;FAQ&lt;/a&gt;
  presents two arguments against the move. &lt;a href="https://git-scm.com/docs/git-notes"&gt;Github notes&lt;/a&gt;
  solves much of point (1): the difficulty of discovering provenance of
  commits, although not entirely. But the main problem is point (2), it turns
  out that &lt;strong&gt;not&lt;/strong&gt; moving to GitHub is an impediment to contribution and issue
  reporting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;People who wish to continue to use Mercurial can use the same method below to
  push to GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHub is more resource rich than foss.heptapod.net. We could add CI
  jobs to replace some of our aging &lt;a href="https://buildbot.pypy.org"&gt;buildbot
  infrastructure&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="method"&gt;Method&lt;/h3&gt;
&lt;p&gt;The migration required two parts: migrating the code and then migrating the
issues and merge requests.&lt;/p&gt;
&lt;h4 id="code-migration-1-code-and-notes"&gt;Code migration 1: code and notes&lt;/h4&gt;
&lt;p&gt;I used a &lt;a href="https://github.com/mnauw/git-remote-hg"&gt;fork of git-remote-hg&lt;/a&gt; to
create a local Git repo with all the changesets. Then I wanted to add a Git
note to each commit with the branch it came from. So I prepared a file with two
columns: the Git commit hash, and the corresponding branch from Mercurial.
Mercurial can describe each commit in two ways: either the commit hash or by a
number index. I used &lt;code&gt;hg log&lt;/code&gt; to convert an index &lt;code&gt;i&lt;/code&gt; to the Mercurial hash,
and then &lt;code&gt;git-hg-helper&lt;/code&gt; from &lt;code&gt;git-remote-hg&lt;/code&gt; to convert the Mercurial hash to
a Git hash:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$(cd pypy-git; git-hg-helper git-rev $(cd ../pypy-hg; hg log -r $i -T"{node}\n"))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then I used &lt;code&gt;hg log&lt;/code&gt; again to print the Mercurial branch for the index &lt;code&gt;i&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$(cd pypy-hg; hg log -r $i -T'{branch}\n')
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Putting these two together, I could loop over all the commits by their
numerical index to prepare the file. Then I iterated over each line in the
file, and added the Git note. Since the &lt;code&gt;git note add&lt;/code&gt; command works on the
current HEAD, I needed to checkout each commit in turn and then add the note:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;git checkout -q &amp;lt;hash&amp;gt; &amp;amp;&amp;amp; git notes --ref refs/notes/branch add -m branch:&amp;lt;branch&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I could then use &lt;code&gt;git push --all&lt;/code&gt; to push to GitHub.&lt;/p&gt;
&lt;h4 id="code-migration-2-prepare-the-branches"&gt;Code migration 2: prepare the branches&lt;/h4&gt;
&lt;p&gt;PyPy has almost 500 open branches. The code migration created all the branch
HEADs, but &lt;code&gt;git push --all&lt;/code&gt; did not push them. I needed to check them out and
push each one. So I created a file with all the branch names&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;cd pypy-hg; hg branches | cut -f1 -d" " &amp;gt; branches.txt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then push each one to the GitHub repo&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;branch&lt;/span&gt;&lt;span class="c1"&gt;; do git checkout branches/$branch &amp;amp;&amp;amp; git push origin branches/$branch; done &amp;lt; branches.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the branches were named &lt;code&gt;branches/XXX&lt;/code&gt; by the migration, not &lt;code&gt;branch/XXX&lt;/code&gt;. This confuses the merge request migration, more about that later.&lt;/p&gt;
&lt;h4 id="issue-and-merge-request-migration"&gt;Issue and merge request migration&lt;/h4&gt;
&lt;p&gt;I used the solution from
&lt;a href="https://github.com/piceaTech/node-gitlab-2-github"&gt;node-gitlab-2-github&lt;/a&gt; which
worked almost perfectly. It is important to do the conversion on a &lt;strong&gt;private
repo&lt;/strong&gt; otherwise every mention of a successfully mapped user name notifies
the user about the transfer. This can be quite annoying for a repo the size of
PyPy with 600 merge requests and over 4000 issues. Issues transferred without a
problem: the script properly retained the issue numbers. However the script
does not convert the Mercurial hashes to Git hashes, so the bare hashes in
comments show up without a link to the commit. Merge requests are more of a problem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Mercurial named branch "disappears" once it is merged, so a merge request
  to a merged branch does not find the target branch name in Git. The
  conversion creates an issue instead with the label &lt;code&gt;gitlab merge request&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For some reason, the branches created by &lt;code&gt;git-remote-hg&lt;/code&gt; are called
  &lt;code&gt;branches/XXX&lt;/code&gt; and not &lt;code&gt;branch/XXX&lt;/code&gt; as expected by GitLab. This messes up the
  merge request/PR conversion. For some of the branches (open PRs and main
  target branches) I manually created additional branches without the &lt;code&gt;es&lt;/code&gt;. The
  net result is that open merge requests became open PRs, merged merge requests
  became issues, and closed-not-merged merge requests were not migrated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="layered-conversions"&gt;Layered conversions&lt;/h4&gt;
&lt;p&gt;PyPy already migrated once from Bitbucket to Heptapod. Many of the issues
reflect the multiple transitions: they have lines like "Created originally on
Bitbucket by XXX" from the first transition, and an additional line "In
Heptapod" from this transition.&lt;/p&gt;
&lt;h3 id="credits"&gt;Credits&lt;/h3&gt;
&lt;p&gt;We would like to express our gratitude to the &lt;a href="https://octobus.net/"&gt;Octobus&lt;/a&gt;
team who support Heptapod. The transition from Bitbucket was quite an effort,
and they have generously hosted our development since then. We wish them all
the best, and still believe that Mercurial should have "won".&lt;/p&gt;
&lt;h3 id="next-steps"&gt;Next steps&lt;/h3&gt;
&lt;p&gt;While the repo at GitHub is live, there are still a few more things we need to
do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation needs an update for the new repo and the build automation from
  readthedocs must be adjusted.&lt;/li&gt;
&lt;li&gt;The wiki should be copied from Heptapod.&lt;/li&gt;
&lt;li&gt;buildbot.pypy.org should also look at the new repo. I hope the code is up to
  the task of interacting with a Git repo.&lt;/li&gt;
&lt;li&gt;speed.pypy.org tracks changes, it too needs to reference the new location&lt;/li&gt;
&lt;li&gt;To keep tracking branches with Git notes on new commits, I activated a
  &lt;a href="https://github.com/Julian/named-branch-action"&gt;github action&lt;/a&gt; by Julian to
  add a Git branch note to each commit. Please see the README there for
  directions on using Git notes.&lt;/li&gt;
&lt;li&gt;Some of the merge requests were not migrated. If someone wants to, they could
  migrate those once they figure out the branch naming problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, now is the time for all of you to prove the move is worthwhile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Star the repo, let others know how to find it,&lt;/li&gt;
&lt;li&gt;Help fix some of the open issues or file new ones,&lt;/li&gt;
&lt;li&gt;Take advantage of the more familiar workflow to get involved in the project,&lt;/li&gt;
&lt;li&gt;Suggest ways to improve the migration: are there things I missed or could
  have done better?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="how-will-development-change"&gt;How will development change?&lt;/h3&gt;
&lt;p&gt;Heptapod did not allow personal forks, so we were generous with a commit bit to
the main repo. Additionally, we (well, me) have been using a
commit-directly-to-main workflow. We will now be adopting a more structured
workflow. Please fork the repo and submit a pull request for any changes. We
can now add some pre-merge CI to check that the PR at least passes the first
stage of translation. The live and active branches will be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;main&lt;/code&gt;: what was "default" in Mercurial, it is the Python2.7 interpreter and
  the base of the RPython interpreter,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;py3.9&lt;/code&gt;: the Python3.9 interpreter, which also includes all RPython changes
  from &lt;code&gt;main&lt;/code&gt;. This is exactly like on Mercurial, and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;py3.10&lt;/code&gt;: the Python3.10 interpreter, which also includes all RPython changes
  from &lt;code&gt;main&lt;/code&gt; and all bugfixes from &lt;code&gt;py3.9&lt;/code&gt;. This is exactly like on Mercurial.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="working-between-the-repos"&gt;Working between the repos&lt;/h4&gt;
&lt;h5 id="finding-commits"&gt;Finding commits&lt;/h5&gt;
&lt;p&gt;If you want to figure out how a Mercurial commit relates to a Git commit, you
can use &lt;code&gt;git-hg-helper&lt;/code&gt;. You run it in the Git repo. It takes the full long
hash from one repo and gives you the corresponding hash of the other repo:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$&lt;span class="w"&gt; &lt;/span&gt;git-hg-helper&lt;span class="w"&gt; &lt;/span&gt;git-rev&lt;span class="w"&gt; &lt;/span&gt;d64027c4c2b903403ceeef2c301f5132454491df
4527e62ad94b0e940a5b0f9f20d29428672f93f7
$&lt;span class="w"&gt; &lt;/span&gt;git-hg-helper&lt;span class="w"&gt; &lt;/span&gt;hg-rev&lt;span class="w"&gt; &lt;/span&gt;4527e62ad94b0e940a5b0f9f20d29428672f93f7
d64027c4c2b903403ceeef2c301f5132454491df
&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id="finding-branches"&gt;Finding branches&lt;/h5&gt;
&lt;p&gt;Branches migrated from Mercurial will have a &lt;code&gt;branches&lt;/code&gt; prefix, not &lt;code&gt;branch&lt;/code&gt;.
While GitLab uses &lt;code&gt;branch&lt;/code&gt; for its prefix, the &lt;code&gt;git-remote-hg&lt;/code&gt; script uses
&lt;code&gt;branches&lt;/code&gt;. New work should be in a PR targeting &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;py3.9&lt;/code&gt; or &lt;code&gt;py3.10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for helping to make PyPy better.&lt;/p&gt;
&lt;p&gt;Matti&lt;/p&gt;
&lt;h2 id="update"&gt;Update&lt;/h2&gt;
&lt;p&gt;In the meantime we found out that unfortunately something went wrong in the
migration of the issues. The old &lt;a href="https://foss.heptapod.net/pypy/pypy/-/issues/3655"&gt;issue
3655&lt;/a&gt; got lost in the
migration. This means that after number 3655 the numbers are different between
github and heptapod, with heptapod being one larger. E.g. &lt;a href="https://foss.heptapod.net/pypy/pypy/-/issues/3700"&gt;issue 3700 on
heptapod&lt;/a&gt; is &lt;a href="https://github.com/pypy/pypy/issues/3699"&gt;issue 3699 on
github&lt;/a&gt;. We are &lt;a href="https://github.com/pypy/pypy/issues/4979"&gt;investigating
options&lt;/a&gt;. &lt;/p&gt;</description><guid>https://www.pypy.org/posts/2023/12/pypy-moved-to-git-github.html</guid><pubDate>Fri, 29 Dec 2023 14:19:55 GMT</pubDate></item><item><title>PyPy v7.3.14 release</title><link>https://www.pypy.org/posts/2023/12/pypy-v7314-release.html</link><dc:creator>mattip</dc:creator><description>&lt;section id="pypy-v7-3-14-release-of-python-2-7-3-9-and-3-10"&gt;
&lt;h2&gt;PyPy v7.3.14: release of python 2.7, 3.9, and 3.10&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.14 of PyPy.&lt;/p&gt;
&lt;p&gt;Highlights of this release are compatibility with &lt;a class="reference external" href="https://hpyproject.org/blog/posts/2023/10/hpy-0.9.0-fourth-public-release/"&gt;HPy-0.9&lt;/a&gt;, cffi 1.16,
additional C-API interfaces, and more python3.10 fixes.&lt;/p&gt;
&lt;p&gt;The release includes three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.9, which is an interpreter supporting the syntax and the features of
Python 3.9, including the stdlib for CPython 3.9.18.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.10, which is an interpreter supporting the syntax and the features of
Python 3.10, including the stdlib for CPython 3.10.13.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. It follows after 7.3.13 release on Sept 29, 2023.&lt;/p&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.14 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
&lt;a class="reference external" href="https://www.pypy.org/pypy-sponsors.html"&gt;direct consulting&lt;/a&gt; work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. Since the last release we have contributions from three new
contributors.  PyPy has many layers and we need help with all of them: bug
fixes, &lt;a class="reference external" href="https://www.pypy.org/posts/2023/12/index.html"&gt;PyPy&lt;/a&gt; and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2023/12/project-ideas.html"&gt;help&lt;/a&gt;
with making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt; / &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant
on PyPy. In any case, both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython
It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;We provide binary builds for:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS 64 bits, Windows 64 bits)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux (&lt;code class="docutils literal"&gt;aarch64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apple &lt;strong&gt;M1 arm64&lt;/strong&gt; machines (&lt;code class="docutils literal"&gt;macos_arm64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy support Windows 32-bit, Linux PPC64 big- and little-endian, and Linux ARM
32 bit, but does not release binaries. Please reach out to us if you wish to
sponsor binary releases for those platforms. Downstream packagers provide
binary builds for debian, Fedora, conda, OpenBSD, FreeBSD, Gentoo, and more.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.14 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.14.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make pypy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy Team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2023/12/pypy-v7314-release.html</guid><pubDate>Mon, 25 Dec 2023 04:22:08 GMT</pubDate></item><item><title>PyPy v7.3.13 release</title><link>https://www.pypy.org/posts/2023/09/pypy-v7313-release.html</link><dc:creator>mattip</dc:creator><description>&lt;section id="pypy-v7-3-13-release-of-python-2-7-3-9-and-3-10"&gt;
&lt;h2&gt;PyPy v7.3.13: release of python 2.7, 3.9, and 3.10&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.13 of PyPy.
This is primarily a security/bug-fix release. CPython released security
patches, and this release also improves the ability to use type
specifications via &lt;code class="docutils literal"&gt;PyType_FromSpec&lt;/code&gt; and friends. There are also some
small speed-ups.&lt;/p&gt;
&lt;p&gt;The release includes three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.9, which is an interpreter supporting the syntax and the features of
Python 3.9, including the stdlib for CPython 3.9.18.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.10, which is an interpreter supporting the syntax and the features of
Python 3.10, including the stdlib for CPython 3.10.13. Note it requires at
least cython 0.29.35 or cython 3.0.0b3.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. It follows after 7.3.12 release on June 16, 2023.&lt;/p&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.13 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
&lt;a class="reference external" href="https://www.pypy.org/pypy-sponsors.html"&gt;direct consulting&lt;/a&gt; work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: bug fixes,
&lt;a class="reference external" href="https://www.pypy.org/posts/2023/09/index.html"&gt;PyPy&lt;/a&gt; and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2023/09/project-ideas.html"&gt;help&lt;/a&gt; with making
RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt; / &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant
on PyPy. In any case, both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython
It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;We provide binary builds for:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS 64 bits, Windows 64 bits)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux (&lt;code class="docutils literal"&gt;aarch64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apple &lt;strong&gt;M1 arm64&lt;/strong&gt; machines (&lt;code class="docutils literal"&gt;macos_arm64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy support Windows 32-bit, Linux PPC64 big- and little-endian, and Linux ARM
32 bit, but does not release binaries. Please reach out to us if you wish to
sponsor binary releases for those platforms. Downstream packagers provide
binary builds for debian, Fedora, conda, OpenBSD, FreeBSD, Gentoo, and more.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.13 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.13.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make pypy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy Team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2023/09/pypy-v7313-release.html</guid><pubDate>Fri, 29 Sep 2023 04:22:08 GMT</pubDate></item><item><title>PyPy v7.3.12 release</title><link>https://www.pypy.org/posts/2023/06/pypy-v7312-release.html</link><dc:creator>mattip</dc:creator><description>&lt;section id="pypy-v7-3-12-release-of-python-2-7-3-9-and-3-10"&gt;
&lt;h2&gt;PyPy v7.3.12: release of python 2.7, 3.9, and 3.10.&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.12 of PyPy.
This release includes a new string-to-int algorithm (also appearing in CPython
3.12) that is faster than the older one; support for symlinks in Windows; and
our first Python3.10 version.&lt;/p&gt;
&lt;p&gt;The release includes three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.9, which is an interpreter supporting the syntax and the features of
Python 3.9, including the stdlib for CPython 3.9.17.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.10, which is an interpreter supporting the syntax and the features of
Python 3.10, including the stdlib for CPython 3.10.12. This is our first
release of 3.10, but based on past experience we are quite confident in
its compatibility with upstream. Of course, we recommend testing your code
with this new version before putting it into production. Note it does
require at least cython 0.29.35 or cython 3.0.0b3&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. It follows after 7.3.11 release on Dec 29, 2022&lt;/p&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.12 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
&lt;a class="reference external" href="https://www.pypy.org/pypy-sponsors.html"&gt;direct consulting&lt;/a&gt; work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: bug fixes,
&lt;a class="reference external" href="https://www.pypy.org/posts/2023/06/index.html"&gt;PyPy&lt;/a&gt; and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2023/06/project-ideas.html"&gt;help&lt;/a&gt; with making
RPython's JIT even better. Since the previous release, we have accepted
contributions from one new contributor, thanks for pitching in, and welcome
to the project!&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt; / &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant
on PyPy. In any case, both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.9 and
3.10. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;We provide binary builds for:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS 64 bits, Windows 64 bits)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux (&lt;code class="docutils literal"&gt;aarch64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apple &lt;strong&gt;M1 arm64&lt;/strong&gt; machines (&lt;code class="docutils literal"&gt;macos_arm64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy support Windows 32-bit, Linux PPC64 big- and little-endian, and Linux ARM
32 bit, but does not release binaries. Please reach out to us if you wish to
sponsor binary releases for those platforms. Downstream packagers provide
binary builds for debian, Fedora, conda, OpenBSD, FreeBSD, Gentoo, and more.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.12 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.12.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make pypy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy Team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2023/06/pypy-v7312-release.html</guid><pubDate>Fri, 16 Jun 2023 04:22:08 GMT</pubDate></item><item><title>PyPy and conda-forge</title><link>https://www.pypy.org/posts/2022/11/pypy-and-conda-forge.html</link><dc:creator>mattip</dc:creator><description>&lt;p&gt;You can use PyPy as your python interpreter in a conda environment. The
conda-forge team has graciously provided this service.&lt;/p&gt;
&lt;p&gt;The conda-forge &lt;a href="https://conda-forge.org/docs/user/tipsandtricks.html#using-pypy-as-an-interpreter"&gt;tips-and-tricks&lt;/a&gt;
page says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The conda-forge channel supports creating and installing packages into
environments using the PyPy interpreter. Many packages are already available.
You need to enable the conda-forge channel and use the pypy identifier when
creating your environment:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;  $ conda create -c conda-forge -n my-pypy-env pypy python=3.8
  $ conda activate my-pypy-env
&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Currently supported python versions are 3.8 and 3.9. Support for pypy3.7 has
been dropped. While you can still create a python 3.7 environment, you you
will not be getting updates as new package versions are released (including
pypy itself).&lt;/p&gt;
&lt;p&gt;if you are using defaults as a low priority channel, then you need to use
strict channel priority as the metadata in defaults has not been patched yet
which allows cpython extension packages to be installed alongside pypy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;  $ conda config --set channel_priority strict
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The work required some out-of-the-box thinking on the part of conda-forge since
they needed to add the idea of a &lt;code&gt;pypy&lt;/code&gt; identifier to the python version and
the whole conda team has been very supportive of the effort needed. Binary
packages are on offer for the usual platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x86_64&lt;/code&gt; windows, macos, linux&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ppc64le&lt;/code&gt; and &lt;code&gt;aarch64&lt;/code&gt; linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;a href="https://conda-forge.org/status/#pypy38"&gt;currently over 1000 packages&lt;/a&gt; available for download via the
conda-forge channel, and more are being added as the kind package maintainers
work around various differences between CPython and PyPy. Please let us know if
your favorite package is not supported.&lt;/p&gt;</description><category>extension modules</category><guid>https://www.pypy.org/posts/2022/11/pypy-and-conda-forge.html</guid><pubDate>Sat, 05 Nov 2022 17:00:25 GMT</pubDate></item><item><title>PyPy's blog has moved</title><link>https://www.pypy.org/posts/2021/03/pypys-blog-has-moved.html</link><dc:creator>mattip</dc:creator><description>&lt;p&gt;For many years, PyPy has been publishing blog posts at
&lt;a href="https://morepypy.blogspot.com"&gt;https://morepypy.blogspot.com&lt;/a&gt;. From now on,
the posts will be here, at &lt;a href="https://pypy.org/blog"&gt;https://pypy.org/blog&lt;/a&gt;. The
RSS feed is &lt;a href="https://pypy.org/rss.xml"&gt;https://pypy.org/rss.xml&lt;/a&gt;. The original
content has been migrated to the newer site, including comments.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;Among the motivations for the move were:&lt;/p&gt;
&lt;h4 id="one-site-to-rule-them-all"&gt;One site to rule them all&lt;/h4&gt;
&lt;p&gt;Adding the blog posts here seems like a natural extension of the web site
rather than outsourcing it to a third-party. Since the site is generated using
the static site generator &lt;a href="https://getnikola.com/"&gt;nikola&lt;/a&gt; from the github repo
&lt;a href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;, we also
have good source control for the content.&lt;/p&gt;
&lt;h4 id="ci-previews-and-github"&gt;CI previews, and github&lt;/h4&gt;
&lt;p&gt;Those of you who follow PyPy may note something new in the URL for the repo:
until now PyPy has been using &lt;a href="https://mercurial-scm.org"&gt;mercurial&lt;/a&gt; as hosted
on &lt;a href="https://foss.heptapod.net"&gt;https://foss.heptapod.net&lt;/a&gt;.  While
&lt;a href="https://heptapod.net/"&gt;heptapod&lt;/a&gt; (a community driven effort to bring mercurial
support to GitLab™) does provide a GitLab CI runner for the open source
offering, on github it is easier to integrate &lt;a href="https://netlify.com"&gt;netlify&lt;/a&gt;
for previews. Hopefully the move to the more popular github platform will
encourage new contributors to publish their success stories around using PyPy
and the RPython toolchain.&lt;/p&gt;
&lt;h4 id="comments"&gt;Comments&lt;/h4&gt;
&lt;p&gt;Comments to blog posts are generated via the &lt;a href="https://utteranc.es/"&gt;utterances&lt;/a&gt;
javascript plugin. The comments appear as issues in the repo.
When viewing the site, a query is made to fetch the comments to the issue with
that name. To comment, users must authorize the utterances app to post on their
behalf using the &lt;a href="https://developer.github.com/v3/oauth/#web-application-flow"&gt;GitHub
OAuth&lt;/a&gt; flow.
Alternatively, users can comment on the GitHub issue directly. The interaction
with github for authentication and moderation seems more natural than the
manual moderation required on blogspot.&lt;/p&gt;
&lt;h4 id="please-prove-to-us-that-the-move-is-worth-it"&gt;Please prove to us that the move is worth it&lt;/h4&gt;
&lt;p&gt;Help us with guest blog posts, and PRs to improve the styling of the site. One
already &lt;a href="https://github.com/pypy/pypy.org/issues/5"&gt;open issue&lt;/a&gt; is that the
navbar needlessly uses javascript, help to keep the responsive style in pure
CSS is welcome. The theme could also use tweaking.&lt;/p&gt;
&lt;p&gt;But more importantly, we want to hear from you.  Guest blog posts about
PyPy are welcome. Just follow the directions in the repo's README to create a
PR with your favorite PyPy story.&lt;/p&gt;
&lt;p&gt;The PyPy Team&lt;/p&gt;</description><guid>https://www.pypy.org/posts/2021/03/pypys-blog-has-moved.html</guid><pubDate>Tue, 09 Mar 2021 11:03:09 GMT</pubDate></item></channel></rss>